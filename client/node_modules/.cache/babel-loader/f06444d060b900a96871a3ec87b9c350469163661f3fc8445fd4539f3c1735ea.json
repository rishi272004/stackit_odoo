{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\nAPI.interceptors.request.use(req => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user !== null && user !== void 0 && user.token) req.headers.Authorization = `Bearer ${user.token}`;\n  return req;\n});\nexport const registerUser = data => API.post('/auth/register', data);\nexport const loginUser = data => API.post('/auth/login', data);\nexport const fetchQuestions = () => API.get('/questions');\nexport const fetchQuestion = id => API.get(`/questions/${id}`);\nexport const askQuestion = data => API.post('/questions', data);\nexport const postAnswer = (questionId, data) => API.post(`/answers/${questionId}`, data);\nexport const fetchNotifications = () => API.get('/notifications');","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","user","JSON","parse","localStorage","getItem","token","headers","Authorization","registerUser","data","post","loginUser","fetchQuestions","get","fetchQuestion","id","askQuestion","postAnswer","questionId","fetchNotifications"],"sources":["C:/Users/Rishi Mathur/odoo_stackit/client/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000/api' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  if (user?.token) req.headers.Authorization = `Bearer ${user.token}`;\r\n  return req;\r\n});\r\n\r\nexport const registerUser = (data) => API.post('/auth/register', data);\r\nexport const loginUser = (data) => API.post('/auth/login', data);\r\n\r\nexport const fetchQuestions = () => API.get('/questions');\r\nexport const fetchQuestion = (id) => API.get(`/questions/${id}`);\r\nexport const askQuestion = (data) => API.post('/questions', data);\r\n\r\nexport const postAnswer = (questionId, data) => API.post(`/answers/${questionId}`, data);\r\n\r\nexport const fetchNotifications = () => API.get('/notifications');\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAA4B,CAAC,CAAC;AAElEF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEK,KAAK,EAAEN,GAAG,CAACO,OAAO,CAACC,aAAa,GAAG,UAAUP,IAAI,CAACK,KAAK,EAAE;EACnE,OAAON,GAAG;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMS,YAAY,GAAIC,IAAI,IAAKhB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;AACtE,OAAO,MAAME,SAAS,GAAIF,IAAI,IAAKhB,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;AAEhE,OAAO,MAAMG,cAAc,GAAGA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,YAAY,CAAC;AACzD,OAAO,MAAMC,aAAa,GAAIC,EAAE,IAAKtB,GAAG,CAACoB,GAAG,CAAC,cAAcE,EAAE,EAAE,CAAC;AAChE,OAAO,MAAMC,WAAW,GAAIP,IAAI,IAAKhB,GAAG,CAACiB,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AAEjE,OAAO,MAAMQ,UAAU,GAAGA,CAACC,UAAU,EAAET,IAAI,KAAKhB,GAAG,CAACiB,IAAI,CAAC,YAAYQ,UAAU,EAAE,EAAET,IAAI,CAAC;AAExF,OAAO,MAAMU,kBAAkB,GAAGA,CAAA,KAAM1B,GAAG,CAACoB,GAAG,CAAC,gBAAgB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}