{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishi Mathur\\\\stackit\\\\client\\\\src\\\\components\\\\QuestionCard.jsx\";\n// src/components/QuestionCard.jsx\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './QuestionCard.css'; // Add your styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = ({\n  question\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/question/${question.id}`,\n        className: \"question-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags\",\n      children: question.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag-badge\",\n        children: tag\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: question.description.length > 120 ? question.description.slice(0, 120) + '...' : question.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user\",\n        children: question.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"answers-count\",\n        children: [question.answers, \" ans\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","QuestionCard","question","className","children","to","id","title","fileName","_jsxFileName","lineNumber","columnNumber","tags","map","tag","index","description","length","slice","user","answers","_c","$RefreshReg$"],"sources":["C:/Users/Rishi Mathur/stackit/client/src/components/QuestionCard.jsx"],"sourcesContent":["// src/components/QuestionCard.jsx\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './QuestionCard.css'; // Add your styles here\r\n\r\nconst QuestionCard = ({ question }) => {\r\n  return (\r\n    <div className=\"question-card\">\r\n      <div className=\"question-header\">\r\n        <Link to={`/question/${question.id}`} className=\"question-title\">\r\n          <h3>{question.title}</h3>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"tags\">\r\n        {question.tags.map((tag, index) => (\r\n          <span key={index} className=\"tag-badge\">{tag}</span>\r\n        ))}\r\n      </div>\r\n\r\n      <p className=\"description\">\r\n        {question.description.length > 120\r\n          ? question.description.slice(0, 120) + '...'\r\n          : question.description}\r\n      </p>\r\n\r\n      <div className=\"meta\">\r\n        <span className=\"user\">{question.user}</span>\r\n        <span className=\"answers-count\">{question.answers} ans</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC,oBACEF,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BJ,OAAA;MAAKG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BJ,OAAA,CAACF,IAAI;QAACO,EAAE,EAAE,aAAaH,QAAQ,CAACI,EAAE,EAAG;QAACH,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC9DJ,OAAA;UAAAI,QAAA,EAAKF,QAAQ,CAACK;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENX,OAAA;MAAKG,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBF,QAAQ,CAACU,IAAI,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC5Bf,OAAA;QAAkBG,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEU;MAAG,GAAjCC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENX,OAAA;MAAGG,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBF,QAAQ,CAACc,WAAW,CAACC,MAAM,GAAG,GAAG,GAC9Bf,QAAQ,CAACc,WAAW,CAACE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GAC1ChB,QAAQ,CAACc;IAAW;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAEJX,OAAA;MAAKG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBJ,OAAA;QAAMG,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEF,QAAQ,CAACiB;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CX,OAAA;QAAMG,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAEF,QAAQ,CAACkB,OAAO,EAAC,MAAI;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACU,EAAA,GA3BIpB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}