{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishi Mathur\\\\stackit\\\\client\\\\src\\\\components\\\\NotificationBell.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { fetchNotifications } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotificationBell() {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const res = await fetchNotifications();\n        const unread = res.data.filter(n => !n.isRead).length;\n        setCount(unread);\n      } catch (err) {\n        // Not logged in or error\n      }\n    };\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"relative\",\n    children: [\"\\uD83D\\uDD14\", count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"absolute -top-2 -right-2 bg-red-600 text-white text-xs rounded-full px-2\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationBell, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["useState","useEffect","fetchNotifications","jsxDEV","_jsxDEV","NotificationBell","_s","count","setCount","load","res","unread","data","filter","n","isRead","length","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rishi Mathur/stackit/client/src/components/NotificationBell.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { fetchNotifications } from '../api/api';\r\n\r\nexport default function NotificationBell() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      try {\r\n        const res = await fetchNotifications();\r\n        const unread = res.data.filter(n => !n.isRead).length;\r\n        setCount(unread);\r\n      } catch (err) {\r\n        // Not logged in or error\r\n      }\r\n    };\r\n    load();\r\n  }, []);\r\n\r\n  return (\r\n    <button className=\"relative\">\r\n      ðŸ””\r\n      {count > 0 && (\r\n        <span className=\"absolute -top-2 -right-2 bg-red-600 text-white text-xs rounded-full px-2\">{count}</span>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,kBAAkB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMR,kBAAkB,CAAC,CAAC;QACtC,MAAMS,MAAM,GAAGD,GAAG,CAACE,IAAI,CAACC,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,MAAM,CAAC,CAACC,MAAM;QACrDR,QAAQ,CAACG,MAAM,CAAC;MAClB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZ;MAAA;IAEJ,CAAC;IACDR,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAQc,SAAS,EAAC,UAAU;IAAAC,QAAA,GAAC,cAE3B,EAACZ,KAAK,GAAG,CAAC,iBACRH,OAAA;MAAMc,SAAS,EAAC,0EAA0E;MAAAC,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACzG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACjB,EAAA,CAxBuBD,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}